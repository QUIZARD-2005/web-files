 function submit()
    {
      //confirm("ARE YOU SURE TO SUBMIT TEST ?");
      var userResponse = confirm("Are you sure you want to proceed?");

if (userResponse) {
    // User clicked "OK"
    console.log("User clicked OK. Proceeding...");
  
      showResult();
 
} else {
    // User clicked "Cancel" or closed the dialog
    console.log("User clicked Cancel or closed the dialog. Action aborted.");
  alert("you can contine with your test")
}   
    }
    

    function startQuiz() {
     
       var qppbox = document.getElementById("qpbox");
    qppbox.style.display = "block";
      
    
      var instructions = document.getElementById("instructions");
      instructions.style.display = "none";

      var startBtn = document.getElementById("start-btn");
      startBtn.style.display = "none";

      var questionContainer = document.getElementById("question-container");
      questionContainer.style.display = "block";

      
 var opt = document.getElementById("optt");
      opt.style.display = "inline-block";



      startTime = new Date();
      displayQuestion();
     
    }


    function skipQuestion() {
      var question = questions[currentQuestion];
      question.skipped = true;
      question.userAnswer = null;
      question.timeTaken = getTimeTakenInSeconds();
      currentQuestion++;

      if (currentQuestion < questions.length) {
        displayQuestion();
      } else {
        showResult();
      }
    }

    function goToPreviousQuestion() {
      currentQuestion--;

      if (currentQuestion >= 0) {
        displayQuestion();
      }
    }

    

let i=0;

  function goToQuestion(questionIndex) {
  for (let i = currentQuestion + 1; i < questions.length; i++) {
   
      questions[i].skipped = true;

  }
  currentQuestion = questionIndex;

  displayQuestion();
}


// Updated JavaScript code for question palette highlighting
 function updateQuestionPalette() {
  var questionPalette = document.getElementById("questionPalette");
  questionPalette.innerHTML = "<button class='togleqboxbtn' onclick='toggleQuestionPalette()'>close box</button>"; // Clear existing content

  questions.forEach(function (question, index) {
    var sectionName = question.section;

    // If this is the first question of the section, add a section text
    if (index === 0 || question.section !== questions[index - 1].section) {
      var sectionText = document.createElement("p");
      sectionText.className = "palette-item section";
      sectionText.textContent = sectionName;
      questionPalette.appendChild(sectionText);
    }

    var questionButton = document.createElement("button");
    questionButton.className = "palette-item";
    questionButton.textContent = index + 1;

    if (index + 1 === currentQuestion + 1) {
      questionButton.classList.add("current"); // Add the "current" class for the current question
    } else if (question.markedForReview) {
      questionButton.classList.add("marked-for-review");
    }

    questionButton.addEventListener("click", function () {
      goToQuestion(index);
    });

    questionPalette.appendChild(questionButton);
  });
}


    function toggleQuestionPalette() {
      console.log("hii 1");
  var questionPalette = document.getElementById("questionPalette");
  var questionPaletteButton = document.getElementById("question-palette-button");

  if (questionPalette.style.display === "none") {
    questionPalette.style.display = "block";
    questionPaletteButton.textContent = "Hide Index";
  } else {
    questionPalette.style.display = "none";
    questionPaletteButton.textContent = "Show Index";
  }
}
   
 
   // Function to mark the current question for review
function markQuestionForReview() {
  var question = questions[currentQuestion];
  question.markedForReview = true;
  question.skipped = false;
  question.userAnswer = null;
  question.timeTaken = getTimeTakenInSeconds();
  updateQuestionPalette();
  currentQuestion++;
  if (currentQuestion < questions.length) {
    displayQuestion();
  } else {
    showResult();
  }
}

// Function to unmark and submit the current question
function unmarkAndSubmit() {
  var question = questions[currentQuestion];
  var selectedOption = document.querySelector('input[name="option"]:checked');

  if (!selectedOption) {
    alert("Please select an option before unmarking and submitting.");
    return;
  }

  // Record the user's answer
  question.userAnswer = parseInt(selectedOption.value);

  question.skipped = false;
  question.timeTaken = getTimeTakenInSeconds();

  if (question.markedForReview) {
    // Remove the "marked-for-review" class from the current question button in the palette
    var questionButton = document.querySelector("#questionPalette button.current");
    if (questionButton) {
      questionButton.classList.remove("marked-for-review");
    }

    question.markedForReview = false;
  }

  currentQuestion++;

  if (currentQuestion < questions.length) {
    displayQuestion();
  } else {
    showResult();
  }
  updateQuestionPalette();
}
